{"task_id": "javascript/0", "language": "javascript", "completion": "let balance = 0;\n    for (let op of operations) {\n        balance += op;\n        if (balance < 0) return true;\n    }\n    return false;\n}\nconsole.log(belowZero([1, 2, 3])); // False\nconsole.log(belowZero([1, 2, -4, 5])); // True"}
{"task_id": "javascript/1", "language": "javascript", "completion": "let sum = 0;\n    let product = 1;\n    for (let number of numbers) {\n        sum += number;\n        product *= number;\n    }\n    return [sum, product];\n}"}
{"task_id": "javascript/2", "language": "javascript", "completion": "let xor = '';\n    for (let i = 0; i < a.length; i++) {\n        // XOR operation\n        xor += (a[i] !== b[i]) ? '1' : '0';\n    }\n    return xor;\n}\nconsole.log(stringXor('010', '110'));  // outputs: '100'"}
{"task_id": "javascript/3", "language": "javascript", "completion": "if (strings.length === 0) return \"none\";\n\n    let maxLength = -1;\n    let maxString = \"\";\n\n    for (let str of strings) {\n        if (str.length > maxLength) {\n            maxLength = str.length;\n            maxString = str;\n        }\n    }\n\n    return maxString;\n}\n\nconsole.log(longest([])); // 'none'\nconsole.log(longest(['a', 'b', 'c'])); // 'a'\nconsole.log(longest(['a', 'bb', 'ccc'])); // 'ccc'"}
{"task_id": "javascript/4", "language": "javascript", "completion": "if (b === 0) return a;\n    return greatestCommonDivisor(b, a % b);\n}"}
{"task_id": "javascript/5", "language": "javascript", "completion": "return numbers.split(\" \").sort().join(\" \");\n} \nconsole.log(sortNumbers('three one five')); // Output: 'five one three'"}
{"task_id": "javascript/6", "language": "javascript", "completion": "let min = Math.min(...numbers);\n    let max = Math.max(...numbers);\n    let range = max - min;\n    return numbers.map((num) => (num - min) / range);\n}\nconsole.log(rescaleToUnit([1.0, 2.0, 3.0, 4.0, 5.0]));"}
{"task_id": "javascript/7", "language": "javascript", "completion": "return string.split(\"\").map((char) => (char === char.toUpperCase() ? char.toLowerCase() : char.toUpperCase())).join(\"\");\n}\n\nconsole.log(flipCase('Hello')); // 'hELLO'"}
{"task_id": "javascript/8", "language": "javascript", "completion": "return l.filter(num => num > 0);\n}"}
{"task_id": "javascript/9", "language": "javascript", "completion": "if (n <= 1) {\n        return false;\n    }\n    for (let i = 2; i < n; i++) {\n        if (n % i === 0) {\n            return false;\n        }\n    }\n    return true;\n}"}
{"task_id": "javascript/10", "language": "javascript", "completion": "let result = [];\n\n    for (let i = 0; i < l.length; i++) {\n        if (result.indexOf(l[i]) === -1) {\n            result.push(l[i]);\n        }\n    }\n\n    return result.sort((a, b) => a - b);\n}\n\nconsole.log(unique([5, 3, 5, 2, 3, 3, 9, 0, 123]));"}
{"task_id": "javascript/11", "language": "javascript", "completion": "let fib = [2, 3];\n    let i = 3;\n    while (fib.length < n) {\n        const next = fib[i - 1] + fib[i - 2];\n        if (next % 2 !== 0 && next % 3 !== 0 && next % 5 !== 0) {\n            fib.push(next);\n        }\n        i++;\n    }\n    return fib[n - 1];\n}\n\nconsole.log(primeFib(1)); // 2\nconsole.log(primeFib(2)); // 3\nconsole.log(primeFib(3)); // 5\nconsole.log(primeFib(4)); // 13\nconsole.log(primeFib(5)); // 89"}
{"task_id": "javascript/12", "language": "javascript", "completion": "l.sort((a, b) => a - b);\n\n    for (let i = 0; i < l.length - 2; i++) {\n        let j = i + 1;\n        let k = l.length - 1;\n\n        while (j < k) {\n            if (l[i] + l[j] + l[k] === 0) {\n                return true;\n            } else if (l[i] + l[j] + l[k] < 0) {\n                j++;\n            } else {\n                k--;\n            }\n        }\n    }\n    return false;\n}\n\nconsole.log(triples_sum_to_zero([1, 3, 5, 0])); // False\nconsole.log(triples_sum_to_zero([1, 3, -2, 1])); // True\nconsole.log(triples_sum_to_zero([1, 2, 3, 7])); // False\nconsole.log(triples_sum_to_zero([2, 4, -5, 3, 9, 7])); // True\nconsole.log(triples_sum_to_zero([1])); // False"}
{"task_id": "javascript/13", "language": "javascript", "completion": "let comp = {};\n    for (let num of l) {\n        if (num in comp) return true;\n        comp[-num] = 1;\n    }\n    return false;\n}"}
{"task_id": "javascript/14", "language": "javascript", "completion": "if (n === 0) return 0;\n    else if (n === 1) return 0;\n    else if (n === 2) return 2;\n    else if (n === 3) return 0;\n    \n    let fib = [0, 0, 2, 0];\n    for(let i=4;i<=n;i++){\n        fib[i] = fib[i-1] + fib[i-2] + fib[i-3] + fib[i-4];\n    }\n    \n    return fib[n];\n}\n\nconsole.log(fib4(5)); // 4\nconsole.log(fib4(6)); // 8\nconsole.log(fib4(7)); // 14"}
{"task_id": "javascript/15", "language": "javascript", "completion": "l.sort((a, b) => a - b);\n    var half = Math.floor(l.length / 2);\n    if (l.length % 2 == 0) {\n        return (l[half - 1] + l[half]) / 2;\n    } else {\n        return l[half];\n    }\n}"}
{"task_id": "javascript/16", "language": "javascript", "completion": "let reversedText = text.split(\"\").reverse().join(\"\");\n    return text === reversedText;\n}\n\nconsole.log(isPalindrome('')); // True\nconsole.log(isPalindrome('aba')); // True\nconsole.log(isPalindrome('aaaaa')); // True\nconsole.log(isPalindrome('zbcd')); // False"}
{"task_id": "javascript/17", "language": "javascript", "completion": "const vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'];\n    return text.split('').filter(char => !vowels.includes(char)).join('');\n}\n\nconsole.log(removeVowels(\"abcdef\\nghijklm\")); // Output: 'bcdf\\nghjklm'"}
{"task_id": "javascript/18", "language": "javascript", "completion": "for (var i = 0; i < l.length; i++) {\n        if (l[i] > t) return false;\n    }\n    return true;\n}"}
{"task_id": "javascript/19", "language": "javascript", "completion": "return x + y;\n}\n\nconsole.log(\"Adding 2 & 3:\", add(2, 3)); // Outputs: 5\nconsole.log(\"Adding 5 & 7:\", add(5, 7)); // Outputs: 12"}
{"task_id": "javascript/20", "language": "javascript", "completion": "let arr0 = Array.from(s0);\n  let arr1 = Array.from(s1);\n  \n  for (let i = 0; i < arr0.length; i++) {\n    if (!arr1.includes(arr0[i])) return false;\n    arr1.splice(arr1.indexOf(arr0[i]), 1);\n  }\n  \n  return true;\n}\n\nconsole.log(sameChars('eabcdzzzz', 'dddzzzzzzzddeddabc')); // True\nconsole.log(sameChars('abcd', 'dddddddabc')); // True\nconsole.log(sameChars('dddddddabc', 'abcd')); // True\nconsole.log(sameChars('eabcd', 'dddddddabc')); // False\nconsole.log(sameChars('abcd', 'dddddddabce')); // False\nconsole.log(sameChars('eabcdzzzz', 'dddzzzzzzzddddabc')); // False"}
{"task_id": "javascript/21", "language": "javascript", "completion": "if (n <= 2) return 1;\n    let a = 1, b = 1;\n    for (let i = 3; i <= n; i++) {\n        [a, b] = [b, a + b];\n    }\n    return b;\n}\n\nconsole.log(fib(10)); // 55\nconsole.log(fib(1)); // 1\nconsole.log(fib(8)); // 21"}
{"task_id": "javascript/22", "language": "javascript", "completion": "let set = new Set(l1);\n    \n    let result = [];\n    \n    for (let item of l2) {\n        if (set.has(item)) {\n            result.push(item);\n            set.delete(item);\n        }\n    }\n    \n    return result;\n}\n\nconsole.log(common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])); // [1, 5, 653]\nconsole.log(common([5, 3, 2, 8], [3, 2])); // [2, 3]"}
{"task_id": "javascript/23", "language": "javascript", "completion": "let divisor = 2;\n\n    while (divisor <= Math.sqrt(n)) {\n        if (n % divisor === 0) {\n            n /= divisor;\n        } else {\n            divisor++;\n        }\n    }\n\n    return n;\n}"}
{"task_id": "javascript/24", "language": "javascript", "completion": "return (n*(n+1))/2;\n}\n\n//Test cases\nconsole.log(sumToN(30)); // 465\nconsole.log(sumToN(100)); // 5050\nconsole.log(sumToN(5)); // 15\nconsole.log(sumToN(10)); // 55\nconsole.log(sumToN(1)); // 1"}
{"task_id": "javascript/25", "language": "javascript", "completion": "let result = [];\n    for (let i = 1; i < xs.length; i++) {\n        result.push(i*xs[i]);\n    }\n    return result;\n}"}
{"task_id": "javascript/26", "language": "javascript", "completion": "if (n === 0) return 0;\n    else if (n === 1) return 0;\n    else if (n === 2) return 1;\n    else {\n        let arr = [0, 0, 1];\n        for(let i=3; i<=n; i++){\n            arr[i] = arr[i-1] + arr[i-2] + arr[i-3];\n        }\n        return arr[n];\n    }\n}\n\nconsole.log(fibfib(1)); // 0\nconsole.log(fibfib(5)); // 4\nconsole.log(fibfib(8)); // 24"}
{"task_id": "javascript/27", "language": "javascript", "completion": "let count = 0;\n    const regexpAeiou = /[aeiou]/gi;\n    const regexpY = /y$/i;\n    const matchesAeiou = s.match(regexpAeiou);\n    const matchesY = s.match(regexpY);\n    if (matchesAeiou) {\n        count += matchesAeiou.length;\n    }\n    if (matchesY) {\n        count += 1;\n    }\n    return count;\n}\n\nconsole.log(vowelsCount(\"abcde\")); // Expected output: 2\nconsole.log(vowelsCount(\"ACEDY\")); // Expected output: 3"}
{"task_id": "javascript/28", "language": "javascript", "completion": "let freq = {};\n    for (let num of lst) {\n        if (!freq[num]) freq[num] = 0;\n        freq[num]++;\n    }\n  \n    let maxFreqNum = -1;\n    for(let key in freq){\n      if(key > maxFreqNum && freq[key] >= key){\n          maxFreqNum = key;\n      }\n    }\n  \n    return maxFreqNum;\n}\n\nconsole.log(search([4, 1, 2, 2, 3, 1])) // 2\nconsole.log(search([1, 2, 2, 3, 3, 3, 4, 4, 4])) // 3\nconsole.log(search([5, 5, 4, 4, 4])) // -1"}
{"task_id": "javascript/29", "language": "javascript", "completion": "if (a + b <= c || a + c <= b || b + c <= a) {\n        return -1;\n    }\n\n    var s = (a + b + c) / 2;\n    var area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\n    return parseFloat(area.toFixed(2));\n}"}
{"task_id": "javascript/30", "language": "javascript", "completion": "let sum = q.reduce((a,b) => a+b, 0);\n    return (sum <= w && q.toString() === q.reverse().toString());\n}"}
{"task_id": "javascript/31", "language": "javascript", "completion": "let factors = [2, 3, 5];\n    let result = [];\n\n    for (let i=0; i<factors.length; i++) {\n        while (a % factors[i] === 0) {\n            a /= factors[i];\n            result.push(factors[i]);\n        }\n    }\n\n    return result.length === 3 && a === 1 ? true : false;\n}"}
{"task_id": "javascript/32", "language": "javascript", "completion": "return `db${decimal.toString(2).padStart(8, '0')}db`;\n}"}
{"task_id": "javascript/33", "language": "javascript", "completion": "if (s.length < 3) return false;\n  \n  for(let i = 0; i < s.length -2; i++){\n    if(s[i] === s[i+1] || s[i] === s[i+2] || s[i+1] === s[i+2]){\n      return false;\n    }\n  }\n  \n  return true;\n}\n\nconsole.log(isHappy('a')); // False\nconsole.log(isHappy('aa')); // False\nconsole.log(isHappy('abcd')); // True\nconsole.log(isHappy('aabb')); // False\nconsole.log(isHappy('adb')); // True\nconsole.log(isHappy('xyy')); // False"}
{"task_id": "javascript/34", "language": "javascript", "completion": "let letters = [];\n    \n    for (let i=0; i < grades.length; i++) {\n        if (grades[i] == 4.0) {\n            letters.push('A+');\n        } else if (grades[i] > 3.7) {\n            letters.push('A');\n        } else if (grades[i] > 3.3) {\n            letters.push('A-');\n        } else if (grades[i] > 3.0) {\n            letters.push('B+');\n        } else if (grades[i] > 2.7) {\n            letters.push('B');\n        } else if (grades[i] > 2.3) {\n            letters.push('B-');\n        } else if (grades[i] > 2.0) {\n            letters.push('C+');\n        } else if (grades[i] > 1.7) {\n            letters.push('C');\n        } else if (grades[i] > 1.3) {\n            letters.push('C-');\n        } else if (grades[i] > 1.0) {\n            letters.push('D+');\n        } else if (grades[i] > 0.7) {\n            letters.push('D');\n        } else if (grades[i] > 0.0) {\n            letters.push('D-');\n        } else {\n            letters.push('E');\n        }\n    }\n    \n    return letters;\n}"}
{"task_id": "javascript/35", "language": "javascript", "completion": "let length = string.length;\n\n    if (length <= 1) return false; // 0, 1, and all negative numbers are not primes\n\n    for (let i = 2; i < Math.sqrt(length); i++) {\n        if (length % i == 0) return false; // divisible by some number other than 1 and itself\n    }\n    return true; // prime\n}"}
{"task_id": "javascript/36", "language": "javascript", "completion": "let sum = n.toString().split('').reduce((a, b) => parseInt(a) + parseInt(b), 0);\n    return sum.toString(2).padStart(8, '0'); // to make sure the result always has 8 bits.\n}\n\nconsole.log(solve(1000)); // \"1\"\nconsole.log(solve(150)); // \"110\"\nconsole.log(solve(147)); // \"1100\""}
{"task_id": "javascript/37", "language": "javascript", "completion": "let result = [];\n\n    for (let i = 0; i < lst.length; i++) {\n        const row = lst[i];\n        for (let j = 0; j < row.length; j++) {\n            if (row[j] === x) {\n                result.push([i, j]);\n            }\n        }\n    }\n\n    // Sort first by rows in ascending order and then by columns in descending order.\n    result.sort((a, b) => a[0] - b[0] || b[1] - a[1]);\n\n    return result;\n}"}
{"task_id": "javascript/38", "language": "javascript", "completion": "if (lst.length < 2) return null;\n    \n    let first = Number.MAX_VALUE, second = Number.MAX_VALUE;\n    \n    for (let i = 0; i < lst.length; i++) {\n        if (lst[i] <= first) {\n            second = first;\n            first = lst[i];\n        } else if(lst[i] < second && lst[i] > first){\n            second = lst[i];\n        }\n    }\n    \n    return second === Number.MAX_VALUE ? null : second;\n}"}
{"task_id": "javascript/39", "language": "javascript", "completion": "let sentences = s.match(/[A-Z][^.!?]*\\.|[A-Z][^.!?]*\\?|[A-Z][^.!?]*!/g); // Matches all the sentences in a string\n    if (sentences == null) return 0;\n    let boredoms = sentences.filter((sentence) => sentence.trim().startsWith(\"I\"));\n    return boredoms.length;\n}\n\nconsole.log(isBored(\"Hello world\")); // 0\nconsole.log(isBored(\"The sky is blue. The sun is shining. I love this weather\")); // 1\nconsole.log(isBored(\"I am bored. It's raining today. I can't go out.\")); // 2\nconsole.log(isBored(\"She said 'I am not sure'. He asked 'Where are you going?'\")); // 0"}
{"task_id": "javascript/40", "language": "javascript", "completion": "function isPrime(n) {\n        if (n < 2) return false;\n        for (let i = 2, sqrt = Math.sqrt(n); i <= sqrt; i++)\n            if (n % i === 0) return false;\n        return true;\n    }\n    let maxPrime = 0;\n    for (let num of lst) {\n        if (isPrime(num) && num > maxPrime) {\n            maxPrime = num;\n        }\n    }\n    \n    if (!maxPrime) return 0;\n    let sum = 0;\n    while(maxPrime){\n        sum += maxPrime % 10;\n        maxPrime = Math.floor(maxPrime / 10);\n    }\n    return sum;\n}"}
{"task_id": "javascript/41", "language": "javascript", "completion": "if (Object.keys(dict).length === 0) {\n        return false;\n    }\n    let allLower = Object.keys(dict).every((key) => typeof key === 'string' && key === key.toLowerCase());\n    let allUpper = Object.keys(dict).every((key) => typeof key === 'string' && key === key.toUpperCase());\n    return allLower || allUpper;\n}\n// Test cases:\nconsole.log(checkDictCase({\"a\":\"apple\", \"b\":\"banana\"})) // True\nconsole.log(checkDictCase({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})) // False\nconsole.log(checkDictCase({\"a\":\"apple\", 8:\"banana\", \"a\":\"apple\"})) // False\nconsole.log(checkDictCase({\"Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"})) // False\nconsole.log(checkDictCase({\"STATE\":\"NC\", \"ZIP\":\"12345\" })) // True"}
{"task_id": "javascript/42", "language": "javascript", "completion": "let floatValue = parseFloat(value);\n    \n    // check if the string can be parsed to a number\n    if (isNaN(floatValue)) {\n        throw new Error('Invalid input, please provide a valid number');\n    }\n\n    let roundedDown = Math.floor(floatValue);\n    let roundedUp = Math.ceil(floatValue);\n    \n    // for positive numbers \n    if (floatValue >= 0) {\n        if ((floatValue - roundedDown) <= 0.5 || floatValue === 0) {\n            return roundedDown;\n        } else {\n            return roundedUp;\n        }\n    }\n\n    // for negative numbers \n    else {\n        if ((roundedUp - floatValue) <= 0.5 || floatValue === 0) {\n            return roundedUp;\n        } else {\n            return roundedDown;\n        }\n    }\n}"}
{"task_id": "javascript/43", "language": "javascript", "completion": "let pile = [];\n\n    for (let i = 0; i < n; i++) {\n        if (n % 2 === 0) {\n            pile.push(n + 2 * i);\n        } else {\n            pile.push(n + 2 * i);\n        }\n    }\n    \n    return pile;\n}\n\nconsole.log(makeAPile(3)); // Output: [3, 5, 7]"}
{"task_id": "javascript/44", "language": "javascript", "completion": "return s.split(/[\\s,]+/);\n}\n\nconsole.log(wordsString(\"Hi, my name is John\")); // [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\nconsole.log(wordsString(\"One, two, three, four, five, six\")); // [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]"}
{"task_id": "javascript/45", "language": "javascript", "completion": "if (x > y) {\n        return -1;\n    }\n    let maxEvenNumber = -1;\n\n    for (let i = x; i <= y; i++) {\n        if (i % 2 === 0 && i > maxEvenNumber) {\n            maxEvenNumber = i;\n        }\n    }\n\n    return maxEvenNumber;\n}"}
{"task_id": "javascript/46", "language": "javascript", "completion": "if (n > m) {\n        return -1;\n    }\n\n    let sum = 0;\n    for (let i = n; i <= m; i++) {\n        sum += i;\n    }\n    \n    let avg = Math.round(sum / (m - n + 1));\n    return '0b' + avg.toString(2);\n}"}
{"task_id": "javascript/47", "language": "javascript", "completion": "let result = [];\n    \n    for(let i=0;i<n;i++){\n        if(i % 2 === 0){\n            result.push(factorial(i));\n        } else{\n            let sum = 0;\n            for(let j=1;j<=i+1;j++){\n                sum += j;\n            }\n            result.push(sum);\n        }\n    }\n    \n    return result;\n}\n\nfunction factorial(n){\n    let result = 1;\n    \n    for(let i=2;i<=n;i++){\n        result *= i;\n    }\n    \n    return result;\n}\n\nconsole.log(f(5));"}
{"task_id": "javascript/48", "language": "javascript", "completion": "let evens = 0;\n    let odds = 0;\n    for (let i=1; i<=n; i++) {\n        if (isPalindrome(i)) {\n            if (i%2 === 0) {\n                evens++;\n            } else {\n                odds++;\n            }\n        }\n    }\n    return [evens, odds];\n}\n\nfunction isPalindrome(n) {\n    let reverse = parseInt(String(n).split('').reverse().join(''));\n    return n === reverse;\n}"}
{"task_id": "javascript/49", "language": "javascript", "completion": "if (arr.length === 0) return true;\n  \n    let maxIndex = arr.indexOf(Math.max(...arr));\n  \n    for (let i = 0; i < maxIndex; i++) {\n        if (arr[i] > arr[i + 1]) return false;\n    }\n  \n    return true;\n}"}
{"task_id": "javascript/50", "language": "javascript", "completion": "let countOddInLst1 = lst1.filter(num => num % 2 !== 0).length;\n    let evenNumbersInLst2 = lst2.filter(num => num % 2 === 0);\n\n    if (countOddInLst1 > evenNumbersInLst2.length) {\n        return \"NO\";\n    } else {\n        return \"YES\";\n    }\n}\n\nconsole.log(exchange([1, 2, 3, 4], [1, 2, 3, 4])); // Expected output: \"YES\"\nconsole.log(exchange([1, 2, 3, 4], [1, 5, 3, 4])); // Expected output: \"NO\""}
{"task_id": "javascript/51", "language": "javascript", "completion": "let arr_s = s.split(\"\"); // convert string to array\n    let arr_c = c.split(\"\"); // convert string to array\n    let finalString = arr_s.filter(x => !arr_c.includes(x)).join(\"\"); // delete chars from s that are in c\n\n    let isPalindrome = (str) => { // define function to check if string is palindrome\n        str = str.toLowerCase();\n        return str === [...str].reverse().join('');\n      };\n      \n    return [finalString, isPalindrome(finalString)]; // return tuple with final string and palindrome check\n}\n\nconsole.log(reverseDelete(\"abcde\", \"ae\")); // ('bcd',false)\nconsole.log(reverseDelete(\"abcdef\", \"b\"));  // ('acdef',false)\nconsole.log(reverseDelete(\"abcdedcba\", \"ab\")); // ('cdedc',true)"}
{"task_id": "javascript/52", "language": "javascript", "completion": "let count = 0;\n    for (let i = 0; i < grid.length; ++i) {\n        for (let j = 0; j < grid[0].length; ++j) {\n            if (grid[i][j] === 1) {\n                count += Math.ceil(grid[i][j] / capacity);\n            }\n        }\n    }\n    return count;\n}"}
{"task_id": "javascript/53", "language": "javascript", "completion": "if (s === \"\") {\n        return [];\n    }\n\n    let words = s.split(' ');\n    let vowels = ['a', 'e', 'i', 'o', 'u'];\n\n    let result = words.filter(word => {\n        let count = 0;\n        for (let char of word) {\n            if (!vowels.includes(char)) {\n                count++;\n            }\n        }\n         return count === n;\n     });\n\n    return result;\n}\n\nconsole.log(selectWords(\"Mary had a little lamb\", 4)); // [\"little\"]\nconsole.log(selectWords(\"Mary had a little lamb\", 3)); // [\"Mary\", \"lamb\"]\nconsole.log(selectWords(\"simple white space\", 2)); // []\nconsole.log(selectWords(\"Hello world\", 4)); // [\"world\"]\nconsole.log(selectWords(\"Uncle sam\", 3)); // [\"Uncle\"]"}
{"task_id": "javascript/54", "language": "javascript", "completion": "return arr.sort((a, b) => b - a).slice(0, k);\n}\n\nconsole.log(maximum([-3, -4, 5], 3)); // Output: [-4, -3, 5]\nconsole.log(maximum([4, -4, 4], 2)); // Output: [4, 4]\nconsole.log(maximum([-3, 2, 1, 2, -1, -2, 1], 1)); // Output: [2]"}
{"task_id": "javascript/55", "language": "javascript", "completion": "let sum = 0;\n    for (let i = 0; i < k; i++) {\n        if ((arr[i] / 10) < 10) { // checks if the number has less than two digits\n            sum += arr[i];\n        }\n    }\n    return sum;\n}\n\n// Example usage:\nlet arr = [111,21,3,4000,5,6,7,8,9];\nlet k = 4;\nconsole.log(addElements(arr, k)); // Output: 24"}
{"task_id": "javascript/56", "language": "javascript", "completion": "let start = Math.max(interval1[0], interval2[0]);\n    let end = Math.min(interval1[1], interval2[1]);\n    \n    if (start > end) return 'NO'; // no intersection\n\n    let length = end - start + 1;\n    if (!isPrimeNumber(length)) return \"NO\";\n    else return \"YES\";\n}\n\nfunction isPrimeNumber(num) {\n    for (let i = 2, sqrt = Math.sqrt(num); i <= sqrt; i++)\n        if (num % i === 0) return false;\n    return num > 1;\n}"}
{"task_id": "javascript/57", "language": "javascript", "completion": "let arr = [1]; // Initialize array with the first number in sequence\n    for (let i = 1; i <= n; i++) {\n        if (i % 2 === 0) {\n            arr.push(1 + i / 2); // Pushes value to array\n        } else {\n            arr.push(arr[arr.length - 2] + arr[arr.length - 3] + arr[arr.length - 1]); // Pushes sum of previous three numbers in sequence to array\n        }\n    }\n    return arr;\n}"}
{"task_id": "javascript/58", "language": "javascript", "completion": "var oddDigits = n.toString().split('').filter(function (digit) {\n        return digit % 2 !== 0;\n    });\n    \n    if (oddDigits.length === 0) {\n        return 0;\n    } else {\n        return oddDigits.reduce(function(product, current) {\n            return product * parseInt(current);\n        }, 1);\n    }\n}"}
{"task_id": "javascript/59", "language": "javascript", "completion": "let count = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] === '[') {\n            count++;\n        } else if (string[i] === ']') {\n            count--;\n        }\n        \n        if (count < 0) {\n            return false;\n        }\n    }\n    \n    return count !== 0;\n}\n\nconsole.log(isNested('[[]]')); // True\nconsole.log(isNested('[]]]]]]][[[[[]')); // False\nconsole.log(isNested('[][]')); // False\nconsole.log(isNested('[]')); // False\nconsole.log(isNested('[[][]]')); // True\nconsole.log(isNested('[[]][[')); // True"}
{"task_id": "javascript/60", "language": "javascript", "completion": "return lst.map(Math.ceil).reduce((a, b) => a + Math.pow(b, 2), 0);\n}"}
{"task_id": "javascript/61", "language": "javascript", "completion": "txt = txt.trim(); // remove leading and trailing spaces\n    if (txt.length === 0) return false; // if the string is empty, return false\n    \n    let lastChar = txt[txt.length - 1];\n    return ((lastChar >= 'a' && lastChar <= 'z') || (lastChar >= 'A' && lastChar <= 'Z')) && !(txt[txt.length - 2] == \" \"); \n}\n\nconsole.log(checkIfLastCharIsALetter(\"apple pie\")); // False\nconsole.log(checkIfLastCharIsALetter(\"apple pi e\")); // True\nconsole.log(checkIfLastCharIsALetter(\"apple pi e \")); // False\nconsole.log(checkIfLastCharIsALetter(\"\")); // False \nconsole.log(checkIfLastCharIsALetter(\"apple pie!\")); // True"}
{"task_id": "javascript/62", "language": "javascript", "completion": "for (let i = arr.length - 2; i >= 0; i--) {\n        if (arr[i] >= arr[i + 1]) {\n            return i;\n        }\n    }\n    return -1;\n}"}
{"task_id": "javascript/63", "language": "javascript", "completion": "let negativeLargest = null;\n    let positiveSmallest = null;\n  \n    for (let i of lst){\n      if(i<0 && (negativeLargest == null || i > negativeLargest)){\n        negativeLargest = i;\n      }else if(i>0 && (positiveSmallest == null || i < positiveSmallest)){\n        positiveSmallest = i;\n      }\n    }\n  \n    return [negativeLargest, positiveSmallest];\n}\n\nconsole.log(largestSmallestIntegers([2, 4, 1, 3, 5, 7])) // => [null, 1]\nconsole.log(largestSmallestIntegers([])) // => [null, null]\nconsole.log(largestSmallestIntegers([0])) // => [null, null]"}
{"task_id": "javascript/64", "language": "javascript", "completion": "let result = 1;\n    \n    for (let i = n; i > 0; i--) {\n        for (let j = i; j > 0; j--) {\n            result *= j;\n        }\n    }\n\n    return result;\n}\n\nconsole.log(specialFactorial(4)); // Output: 288"}
{"task_id": "javascript/65", "language": "javascript", "completion": "let arr = sentence.split(' ');\n    let res = [];\n    for (let word of arr) {\n        if (isPrime(word.length)) {\n            res.push(word);\n        }\n    }\n    return res.join(' ');\n}\n\nfunction isPrime(n) {\n    if (n <= 1) {\n        return false;\n    }\n    for (let i = 2; i < Math.sqrt(n); i++) {\n        if (n % i === 0) {\n            return false;\n        }\n    }\n    return true;\n}\nconsole.log(wordsInSentence(\"This is a test\")); // \"is\"\nconsole.log(wordsInSentence(\"lets go for swimming\")); // \"go for\""}
{"task_id": "javascript/66", "language": "javascript", "completion": "let [xNumerator, xDenominator] = x.split('/').map(Number);\n  let [nNumerator, nDenominator] = n.split('/').map(Number);\n\n  let newNumerator = xNumerator * nNumerator;\n  let newDenominator = xDenominator * nDenominator;\n\n  //check if the result is a whole number\n  return newNumerator % newDenominator === 0;\n}"}
{"task_id": "javascript/67", "language": "javascript", "completion": "return nums.sort((a, b) => {\n        const sumA = a.toString().split('').reduce((acc, val) => acc + Math.abs(parseInt(val)), 0);\n        const sumB = b.toString().split('').reduce((acc, val) => acc + Math.abs(parseInt(val)), 0);\n        \n        return sumA - sumB || a - b;\n    });\n}\n\nconsole.log(orderByPoints([1, 11, -1, -11, -12])); // [-1, -11, 1, -12, 11]"}
{"task_id": "javascript/68", "language": "javascript", "completion": "let count = 0;\n    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 10) {\n            let strNum = Math.abs(nums[i]).toString();\n            if (\"13579\".includes(strNum[0]) && \"13579\".includes(strNum[strNum.length - 1])) {\n                count++;\n            }\n        }\n    }\n    return count;\n}\nconsole.log(specialfilter([15, -73, 14, -15])); // 1\nconsole.log(specialfilter([33, -2, -3, 45, 21, 109])); // 2"}
{"task_id": "javascript/69", "language": "javascript", "completion": "let a = Array.from({length: n}, (_, i) => i*i - i + 1);\n    let count = 0;\n    for(let i=0; i<n-2; i++){\n        for(let j=i+1; j<n-1; j++){\n            for(let k=j+1; k<n; k++){\n                if((a[i]+a[j]+a[k]) % 3 === 0) count++;\n            }\n        }\n    }\n    return count;\n}"}
{"task_id": "javascript/70", "language": "javascript", "completion": "const planets = [\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"];\n  \n  if (!planets.includes(planet1) || !planets.includes(planet2)) {\n    return (); // Return an empty tuple if planet names are incorrect\n  }\n  \n  const index1 = planets.indexOf(planet1);\n  const index2 = planets.indexOf(planet2);\n  \n  if (index1 < index2) {\n    return planets.slice(index1+1, index2); // +1 because we don't want to include planet1 in the result\n  } else {\n    return planets.slice(index2+1, index1); // +1 because we don't want to include planet2 in the result\n  }\n}"}
{"task_id": "javascript/71", "language": "javascript", "completion": "if (isPrime(n)) {\n        return x;\n    } else {\n        return y;\n    }\n}\n\nfunction isPrime(n) {\n    if (n <= 1) {\n        return false;\n    }\n    if (n == 2) {\n        return true;\n    }\n    if (n % 2 == 0) {\n        return false;\n    }\n    for (let i = 3; i * i <= n; i += 2) {\n        if (n % i == 0) {\n            return false;\n        }\n    }\n    return true;\n}"}
{"task_id": "javascript/72", "language": "javascript", "completion": "let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n      if (typeof lst[i] === 'number' && lst[i] > 0 && lst[i] % 2 !== 0){\n          sum += Math.pow(lst[i], 2);\n      }\n  }\n  return sum;\n}"}
{"task_id": "javascript/73", "language": "javascript", "completion": "let maxStrength = -Infinity;\n    let bestExt = '';\n    for (let ext of extensions) {\n        let CAP = Array.from(ext).filter(x => x === x.toUpperCase()).length;\n        let SM = Array.from(ext).filter(x => x === x.toLowerCase()).length;\n        let strength = CAP - SM;\n        if (strength > maxStrength) {\n            maxStrength = strength;\n            bestExt = ext;\n        }\n    }\n    return `${classname}.${bestExt}`;\n}"}
{"task_id": "javascript/74", "language": "javascript", "completion": "if (b.length > a.length) return false;\n    for (let i = 0; i < b.length; i++) {\n        let rotation = b.slice(i) + b.slice(0, i);\n        if (a.indexOf(rotation) !== -1) return true;\n    }\n    return false;\n}\n\nconsole.log(cycpatternCheck(\"abcd\", \"abd\")); // => False\nconsole.log(cycpatternCheck(\"hello\", \"ell\")); // => True\nconsole.log(cycpatternCheck(\"whassup\", \"psus\")); // => False\nconsole.log(cycpatternCheck(\"abab\", \"baa\")); // => True\nconsole.log(cycpatternCheck(\"efef\", \"eeff\")); // => False\nconsole.log(cycpatternCheck(\"himenss\",\"simen\")); // => True"}
{"task_id": "javascript/75", "language": "javascript", "completion": "const nums = [1, 4, 5, 9, 10, 40, 50, 90, 100, 400, 500, 900, 1000];\n  const romans = ['i', 'iv', 'v', 'ix', 'x', 'xl', 'l', 'xc', 'c', 'cd', 'd', 'cm', 'm'];\n\n  let result = '';\n  for (let i = nums.length - 1; i >= 0; i--) {\n    while (number >= nums[i]) {\n      number -= nums[i];\n      result += romans[i];\n    }\n  }\n\n  return result;\n}\n\nconsole.log(intToMiniRoman(19)); // Output: xix\nconsole.log(intToMiniRoman(152)); // Output: clii\nconsole.log(intToMiniRoman(426)); // Output: cdxxvi"}
{"task_id": "javascript/76", "language": "javascript", "completion": "// Calculate the sides to see if they form a right angle triangle.\n    var sides = [a*a, b*b, c*c];\n    sides.sort((a, b) => a - b); \n    \n    return Math.abs(sides[0] + sides[1] - sides[2]) < 0.00001;\n}\n\nconsole.log(rightAngleTriangle(3, 4, 5)); // true\nconsole.log(rightAngleTriangle(1, 2, 3)); // false"}
{"task_id": "javascript/77", "language": "javascript", "completion": "let res = '';\n  const isLetter = (char) => char.toLowerCase() !== char.toUpperCase();\n  for(let i = 0; i < s.length; i++) {\n    if(isLetter(s[i])){\n      if(s[i] === s[i].toUpperCase()) res += s[i].toLowerCase();\n      else res += s[i].toUpperCase();\n    }else{\n      res += s[i];\n    }\n  }\n  \n  return (res.length === 0) ? res.split('').reverse().join('') : res;\n}\nconsole.log(solve(\"1234\")); // = \"4321\"\nconsole.log(solve(\"ab\")); // = \"AB\"\nconsole.log(solve(\"#a@C\")); // = \"#A@c\""}
{"task_id": "javascript/78", "language": "javascript", "completion": "if (text.length === 0) {\n    return \"none\";\n  }\n\n  const crypto = require('crypto');\n  const hash = crypto.createHash(\"md5\");\n  hash.update(text);\n  return hash.digest('hex');\n}\n\nconsole.log(stringToMd5('Hello world')); // 3e25960a79dbc69b674cd4ec67a72c62"}
{"task_id": "javascript/79", "language": "javascript", "completion": "let result = [];\n    const minNumber = Math.min(a, b);\n    const maxNumber = Math.max(a, b);\n  \n    for (let i = minNumber; i <= maxNumber; i++) {\n        let numberAsString = String(i);\n        let evenDigits = numberAsString.split('').filter(digit => parseInt(digit) % 2 === 0).sort((a, b) => a - b);\n        if (evenDigits.length > 0){\n            result.push(parseInt(evenDigits.join('')));\n        }\n    }\n  \n    return result;\n}\n\nconsole.log(generateIntegers(2, 8)); // [2, 4, 6, 8]\nconsole.log(generateIntegers(8, 2)); // [2, 4, 6, 8]\nconsole.log(generateIntegers(10, 14)); // []"}
