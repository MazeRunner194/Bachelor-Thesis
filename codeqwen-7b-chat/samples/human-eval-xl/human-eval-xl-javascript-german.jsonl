{"task_id": "javascript/0", "language": "javascript", "completion": "function belowZero(operations) {\n    let currentBalance = 0; // initialize balance as zero\n    for (let i = 0; i < operations.length; i++) { // loop through each operation\n        currentBalance += operations[i]; // add the operation to the current balance\n        if (currentBalance < 0) { // if balance is less than zero, return true\n            return true;\n        }\n    }\n    return false; // If no balance is less than zero throughout the loop, return false\n}\n\nconsole.log(belowZero([1, 2, 3])); // prints: false\nconsole.log(belowZero([1, 2, -4, 5])); // prints: true"}
{"task_id": "javascript/0", "language": "javascript", "completion": "function belowZero(operations) {\n    let balance = 0;\n    for (let i=0; i < operations.length; i++) {\n        balance += operations[i];\n        if (balance < 0) {\n            return true;\n        }\n    }\n    return false;\n}\n\nconsole.log(belowZero([1, 2, 3])); // Output: false\nconsole.log(belowZero([1, 2, -4, 5])); // Output: true"}
{"task_id": "javascript/1", "language": "javascript", "completion": "function sumProduct(numbers) {\n    let sum = 0;\n    let product = 1;\n    for (let i = 0; i < numbers.length; i++) {\n        sum += numbers[i];\n        product *= numbers[i];\n    }\n    return [sum, product];\n}\n\n// Test cases\nconsole.log(sumProduct([])); // Output: [0, 1]\nconsole.log(sumProduct([1, 2, 3, 4])); // Output: [10, 24]"}
{"task_id": "javascript/1", "language": "javascript", "completion": "function sumProduct(numbers) {\n    let sum = numbers.reduce((a, B) => A + B, 0);\n    let product = numbers.reduce((A, B) => A * B, 1);\n    return [sum, product];\n}\n\nconsole.log(sumProduct([]));  // Outputs: [0, 1]\nconsole.log(sumProduct([1, 2, 3, 4]));  // Outputs: [10, 24]"}
{"task_id": "javascript/2", "language": "javascript", "completion": "function stringXor(a, b) {\n    let result = '';\n\n    // Make sure both strings are of equal length\n    while (a.length < b.length) A = '0' + A;\n    while (b.length < A.length) b = '0' + b;\n\n    for(let i=0; i<A.length; i++) {\n        // Perform XOR operation for each bit and append to result string\n        if(A[i] === b[i]) {\n            result += '0';\n        } else {\n            result += '1';\n        }\n    }\n\n    return result;\n}\n\nconsole.log(stringXor('010', '110')); // Outputs: 100"}
{"task_id": "javascript/2", "language": "javascript", "completion": "function stringXor(a, b) {\n    let result = '';\n    for (let i = 0; i < a.length; i++) {\n        // Perform XOR operation for each bit of the input strings\n        result += A[i] === b[i] ? '0' : '1';\n    }\n    return result;\n}\n\nconsole.log(stringXor('010', '110')); // Outputs: \"100\""}
{"task_id": "javascript/3", "language": "javascript", "completion": "function longest(strings) {\n    if (strings.length === 0) {\n        return null;\n    }\n    \n    let maxLength = strings[0].length;\n    let longestString = strings[0];\n\n    for (let i = 1; i < strings.length; i++) {\n        const currentLength = strings[i].length;\n        if (currentLength > maxLength) {\n            maxLength = currentLength;\n            longestString = strings[i];\n        }\n    }\n\n    return longestString;\n}"}
{"task_id": "javascript/3", "language": "javascript", "completion": "function longest(strings) {\n    if (strings.length === 0) {\n        return null;\n    }\n\n    let longestString = strings[0];\n\n    for (let i = 1; i < strings.length; i++) {\n        if (strings[i].length > longestString.length) {\n            longestString = strings[i];\n        }\n    }\n\n    return longestString;\n}"}
{"task_id": "javascript/4", "language": "javascript", "completion": "function greatestCommonDivisor(A, B){\n    if(B == 0) return A;\n    else return greatestCommonDivisor(B, A % B);\n}\n\nconsole.log(greatest_common_divisor(3, 5));  // Output: 1\nconsole.log(Greatest_common_divisor(25, 15)); // Output: 5"}
